Description: Fix nova cells failing with a json topology file bug
Author: Liam Young <liam.young@canonical.com>
Bug: https://bugs.launchpad.net/nova/+bug/1314677
Forwarded: https://review.openstack.org/#/c/124811/
diff --git a/nova/cells/state.py b/nova/cells/state.py
index b9112bd..1e12450 100644
--- a/nova/cells/state.py
+++ b/nova/cells/state.py
@@ -152,10 +152,7 @@ class CellStateManager(base.Base):
             cells_config = CONF.cells.cells_config
 
         if cells_config:
-            config_path = CONF.find_file(cells_config)
-            if not config_path:
-                raise cfg.ConfigFilesNotFoundError(config_files=[cells_config])
-            return CellStateManagerFile(cell_state_cls, config_path)
+            return CellStateManagerFile(cell_state_cls)
 
         return CellStateManagerDB(cell_state_cls)
 
@@ -450,8 +447,11 @@ class CellStateManagerDB(CellStateManager):
 
 
 class CellStateManagerFile(CellStateManager):
-    def __init__(self, cell_state_cls, cells_config_path):
-        self.cells_config_path = cells_config_path
+    def __init__(self, cell_state_cls=None):
+        cells_config = CONF.cells.cells_config
+        self.cells_config_path = CONF.find_file(cells_config)
+        if not self.cells_config_path:
+            raise cfg.ConfigFilesNotFoundError(config_files=[cells_config])
         super(CellStateManagerFile, self).__init__(cell_state_cls)
 
     def _cell_data_sync(self, force=False):
diff --git a/nova/tests/cells/test_cells_state_manager.py b/nova/tests/cells/test_cells_state_manager.py
index 1c29927..4841e14 100644
--- a/nova/tests/cells/test_cells_state_manager.py
+++ b/nova/tests/cells/test_cells_state_manager.py
@@ -16,12 +16,16 @@
 Tests For CellStateManager
 """
 
+import mock
+import six
+
 from oslo.config import cfg
 
 from nova.cells import state
 from nova import db
 from nova.db.sqlalchemy import models
 from nova import exception
+from nova.openstack.common import fileutils
 from nova import test
 
 
@@ -78,6 +82,19 @@ class TestCellsStateManager(test.TestCase):
                               state.CellStateManager)
         self.assertEqual(['no_such_file_exists.conf'], e.config_files)
 
+    @mock.patch.object(cfg.ConfigOpts, 'find_file')
+    @mock.patch.object(fileutils, 'read_cached_file')
+    def test_filemanager_returned(self, mock_read_cached_file, mock_find_file):
+        mock_find_file.return_value = "/etc/nova/cells.json"
+        mock_read_cached_file.return_value = (False, six.StringIO({}))
+        self.flags(cells_config='cells.json', group='cells')
+        self.assertIsInstance(state.CellStateManager(),
+                              state.CellStateManagerFile)
+
+    def test_dbmanager_returned(self):
+        self.assertIsInstance(state.CellStateManager(),
+                              state.CellStateManagerDB)
+
     def test_capacity_no_reserve(self):
         # utilize entire cell
         cap = self._capacity(0.0)

